<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
<!--    scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。-->
<!--    scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。-->
<!--    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->

    <!-- 属性文件:在properties文件中找到对应的配置项 -->
    <springProperty scope="context" name="app.logging.path"  source="app.logging.path"/>

    <!-- 控制台输出日志 -->
    <appender name="console-stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d] [%-5level] [%thread] %logger{36}: %m%n</pattern>
        </encoder>
    </appender>

    <!-- 文件输出日志 -->
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 采用追加日志的方式 -->
        <append>true</append>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>

        <file>${app.logging.path}/logs/info.log</file>

        <!-- 每天产生一个日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${app.logging.path}/logs/info.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxFileSize>500MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d] [%-5level] [%thread] %logger{36}: %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 采用追加日志的方式 -->
        <append>true</append>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>error</level>
        </filter>

        <file>${app.logging.path}/logs/error.log</file>

        <!-- 每天产生一个日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${app.logging.path}/logs/error.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxFileSize>500MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d] [%-5level] [%thread] %logger{36}: %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="request" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 采用追加日志的方式 -->
        <append>true</append>

        <file>${app.logging.path}/logs/request.log</file>

        <!-- 每天产生一个日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${app.logging.path}/logs/request.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxFileSize>500MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d] [%-5level] [%thread] %logger{36}: %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <logger name="info">
        <appender-ref ref="console-stdout" />
        <appender-ref ref="info"/>
    </logger>
    <logger name="error">
        <appender-ref ref="console-stdout" />
        <appender-ref ref="error"/>
    </logger>
    <logger name="request">
        <appender-ref ref="request"/>
    </logger>

</configuration>
